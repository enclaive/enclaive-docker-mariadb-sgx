libos.entrypoint = "/premain/premain-libos"

loader.entrypoint = "file:{{ gramine.libos }}"

loader.argv0_override = "/app/launcher"

loader.log_level = "error"
#loader.log_file = "log.txt"

loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}"
loader.env.MALLOC_ARENA_MAX = "1"

loader.env.EDG_MARBLE_TYPE = { passthrough = true }
loader.env.EDG_MARBLE_COORDINATOR_ADDR = { passthrough = true }
loader.env.EDG_MARBLE_UUID_FILE = { passthrough = true }
loader.env.EDG_MARBLE_DNS_NAMES = { passthrough = true }

fs.mounts = [
    { path = "/tmp",              uri = "file:/tmp",        type = "tmpfs" },
    { path = "/run/mysqld",       uri = "file:/run/mysqld", type = "tmpfs" },
    { path = "/etc",              uri = "file:/etc" },
    { path = "/usr",              uri = "file:/usr" },
    { path = "/lib",              uri = "file:{{ gramine.runtimedir() }}" },
    { path = "{{ arch_libdir }}", uri = "file:{{ arch_libdir }}" },
    { path = "/app",              uri = "file:/app" },

    #premain libos
    { path = "/premain",          uri = "file:/premain" },

    #volumes
    { path = "/var/lib/mysql",    uri = "file:/data", type = "encrypted", key_name = "mariadbd_data" },
    { path = "/secrets/", uri = "file:/secrets", type = "encrypted", key_name = "mariadbd_secrets" },
]

sgx.thread_num = 32
sgx.enclave_size = "1G"

sgx.debug = false
sgx.remote_attestation = "dcap"
sgx.isvprodid = 13
sgx.isvsvn    = 1

sgx.trusted_files = [
    "file:{{ gramine.libos }}",
    "file:{{ gramine.runtimedir() }}/",
    "file:{{ arch_libdir }}/",

    "file:/app/launcher",
    "file:/app/mariadbd",
    "file:/app/mysql.tar.gz",

    "file:/etc/my.cnf",
    "file:/usr/lib/mysql/plugin/",

    "file:/etc/nsswitch.conf",
    "file:/etc/group",
    "file:/etc/passwd",

    "file:/etc/localtime",
    "file:/etc/timezone",

    "file:/premain/premain-libos",
]


sgx.allowed_files = [
  "file:/etc/ethers",
  "file:/etc/hosts",
  "file:/etc/localtime",
  "file:/etc/resolv.conf",
  "file:/etc/host.conf",

  # MARBLERUN: allow the marble's uuid file
  "file:uuid"
]